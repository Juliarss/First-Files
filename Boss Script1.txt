#include "ScriptPCH.h"

enum Spells
{
    SPELL_LIGHTNINGBOLT = 403, 
    SPELL_HEALINGWAVE = 331,
    SPELL_FLAMESHOCK = 8050,
};

enum Events
{
    EVENT_LIGHTNINGBOLT = 1,
    EVENT_HEALINGWAVE = 2,
    EVENT_FLAMESHOCK = 3,
};

class example : public CreatureScript
{
    public:
        example() : CreatureScript("example") { }

        struct exampleAI : public BossAI
        {
            exampleAI(Creature* creature) : BossAI(creature, 0)
            {
            }

            void Reset() OVERRIDE
            {
                _Reset();
            }
			
            void EnterCombat(Unit* /*who*/) OVERRIDE
            {
                events.ScheduleEvent(EVENT_LIGHTNINGBOLT, 8000);
                events.ScheduleEvent(EVENT_HEALINGWAVE, 12000);
                events.ScheduleEvent(EVENT_FLAMESHOCK , 10000);
            }
			
            void KilledUnit(Unit * /*victim*/) OVERRIDE
            {
            }
			
            void JustDied(Unit * /*victim*/) OVERRIDE
            {
            }

            void UpdateAI(uint32 diff) OVERRIDE
            {
                if (!UpdateVictim())
                    return;
					
                events.Update(diff);

                if (me->HasUnitState(UNIT_STATE_CASTING))
                    return;
					
            while (uint32 eventId = events.ExecuteEvent())
            {
                switch (eventId)
                {
                    case EVENT_LIGHTNINGBOLT:
                        DoCastVictim(SPELL_LIGHTNINGBOLT);
                        events.ScheduleEvent(EVENT_LIGHTNINGBOLT , 8000);
                        break;
                    case EVENT_HEALINGWAVE:
                        DoCast(me, SPELL_HEALINGWAVE);
                        events.ScheduleEvent(EVENT_HEALINGWAVE , 12000);
                        break;
                    case EVENT_FLAMESHOCK:
                        if (Unit *target = SelectTarget(SELECT_TARGET_RANDOM, 0))
                            DoCast(target, SPELL_FLAMESHOCK);
                        events.ScheduleEvent(EVENT_FLAMESHOCK , 10000);
                        break;
                    default:
                        break;
                }
            }
				
                DoMeleeAttackIfReady();
            }
        };

        CreatureAI* GetAI(Creature* creature) const OVERRIDE
        {
            return new exampleAI(creature);
        }
};

void AddSC_example()
{
	new example();
}
#include "ScriptPCH.h"

enum Spells
{
    SPELL_LIGHTNINGBOLT = 403, 
    SPELL_HEALINGWAVE = 331,
    SPELL_FLAMESHOCK = 8050,
};

enum Events
{
    EVENT_LIGHTNINGBOLT = 1,
    EVENT_HEALINGWAVE = 2,
    EVENT_FLAMESHOCK = 3,
    EVENT_SPAWNCREATURE = 4,
};

enum Phases
{
    PHASE_ONE = 1,
    PHASE_TWO = 2,
};

class example : public CreatureScript
{
    public:
        example() : CreatureScript("example") { }

        struct exampleAI : public BossAI
        {
            exampleAI(Creature* creature) : BossAI(creature, 0)
            {
            }

            void Reset() OVERRIDE
            {
                _Reset();
            }
			
            void EnterCombat(Unit* /*who*/) OVERRIDE
            {
                events.SetPhase(PHASE_ONE);
				
                events.ScheduleEvent(EVENT_LIGHTNINGBOLT, 8000, 0, PHASE_ONE);
                events.ScheduleEvent(EVENT_HEALINGWAVE, 12000, 0, PHASE_ONE);
            }
			
            void KilledUnit(Unit * /*victim*/) OVERRIDE
            {
            }
			
            void JustDied(Unit * /*victim*/) OVERRIDE
            {
            }

            void UpdateAI(uint32 diff) OVERRIDE
            {
                if (!UpdateVictim())
                    return;
					
                events.Update(diff);

                if (me->HasUnitState(UNIT_STATE_CASTING))
                    return;
					
                if (events.IsInPhase(PHASE_ONE) && HealthBelowPct(75))
                {
                    events.SetPhase(PHASE_TWO);
					
                    events.ScheduleEvent(EVENT_FLAMESHOCK, 10000, 0, PHASE_TWO);
                    events.ScheduleEvent(EVENT_SPAWNCREATURE, 25000, 0, PHASE_TWO);
                }	

				
                while (uint32 eventId = events.ExecuteEvent())
                {
                    switch (eventId)
                    {
                        case EVENT_LIGHTNINGBOLT:
                            DoCastVictim(SPELL_LIGHTNINGBOLT);
                            events.ScheduleEvent(EVENT_LIGHTNINGBOLT, 8000, 0, PHASE_ONE);
                            break;
                        case EVENT_HEALINGWAVE:
                            DoCast(me, SPELL_HEALINGWAVE);
                            events.ScheduleEvent(EVENT_HEALINGWAVE, 12000, 0, PHASE_ONE);
                            break;
                        case EVENT_FLAMESHOCK:
                            if (Unit *target = SelectTarget(SELECT_TARGET_RANDOM, 0))
                                DoCast(target, SPELL_FLAMESHOCK);
                            events.ScheduleEvent(EVENT_FLAMESHOCK, 10000, 0, PHASE_TWO);
                            break;
                        case EVENT_SPAWNCREATURE:
                            me->SummonCreature(1234, -512.42f, 1234.56f, 56.21f, 2.1f, TEMPSUMMON_TIMED_DESPAWN_OUT_OF_COMBAT, 5000);
                            events.ScheduleEvent(EVENT_SPAWNCREATURE, 25000, 0, PHASE_TWO);
                            break;
                        default:
                            break;
                    }
                }
				
                DoMeleeAttackIfReady();
            }
        };

        CreatureAI* GetAI(Creature* creature) const OVERRIDE
        {
            return new exampleAI(creature);
        }
};

void AddSC_example()
{
	new example();
}